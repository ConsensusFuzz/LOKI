Command `sandbox publish --mode bare`:
Command `sandbox generate struct-layouts --module storage/0x00000000000000000000000000000001/modules/M2.mv --struct C --type-args u64`:
{ t: u64, b: bool, }
Command `sandbox generate struct-layouts --module storage/0x00000000000000000000000000000001/modules/M2.mv --struct C --type-args address`:
{ t: address, b: bool, }
Command `sandbox generate struct-layouts --module storage/0x00000000000000000000000000000001/modules/M2.mv --struct C --type-args vector<u8>`:
{ t: vector<u8>, b: bool, }
Command `sandbox generate struct-layouts --module storage/0x00000000000000000000000000000001/modules/M1.mv --struct B --type-args bool`:
{ a: address, c: { t: bool, b: bool, }, t: bool, }
Command `sandbox generate struct-layouts --module storage/0x00000000000000000000000000000001/modules/M1.mv --struct A --type-args 0x1::M1::S<u64>`:
{ f: u64, v: vector<u8>, b: { a: address, c: { t: { t: u64, }, b: bool, }, t: { t: u64, }, }, }
Command `sandbox generate struct-layouts --module storage/0x00000000000000000000000000000001/modules/M1.mv --struct A --type-args vector<0x1::M1::S<u64>>`:
{ f: u64, v: vector<u8>, b: { a: address, c: { t: vector<{ t: u64, }>, b: bool, }, t: vector<{ t: u64, }>, }, }
Command `sandbox generate struct-layouts --module storage/0x00000000000000000000000000000001/modules/M2.mv --struct C --type-args 0x1::M2::C<u64>`:
{ t: { t: u64, b: bool, }, b: bool, }
