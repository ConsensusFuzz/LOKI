============ initial translation from Move ================

[variant baseline]
fun TestLiveVars::test1($t0|r_ref: &TestLiveVars::R): u64 {
     var $t1|x_ref: &u64
     var $t2: &TestLiveVars::R
     var $t3: &u64
     var $t4: &u64
     var $t5: u64
  0: $t2 := move($t0)
  1: $t3 := borrow_field<TestLiveVars::R>.x($t2)
  2: $t1 := $t3
  3: $t4 := move($t1)
  4: $t5 := read_ref($t4)
  5: return $t5
}


[variant baseline]
fun TestLiveVars::test2($t0|b: bool): u64 {
     var $t1|r1: TestLiveVars::R
     var $t2|r2: TestLiveVars::R
     var $t3|r_ref: &TestLiveVars::R
     var $t4: u64
     var $t5: TestLiveVars::R
     var $t6: u64
     var $t7: TestLiveVars::R
     var $t8: &TestLiveVars::R
     var $t9: bool
     var $t10: &TestLiveVars::R
     var $t11: &TestLiveVars::R
     var $t12: &TestLiveVars::R
     var $t13: u64
  0: $t4 := 3
  1: $t5 := pack TestLiveVars::R($t4)
  2: $t1 := $t5
  3: $t6 := 4
  4: $t7 := pack TestLiveVars::R($t6)
  5: $t2 := $t7
  6: $t8 := borrow_local($t1)
  7: $t3 := $t8
  8: $t9 := copy($t0)
  9: if ($t9) goto 12 else goto 10
 10: label L1
 11: goto 18
 12: label L0
 13: $t10 := move($t3)
 14: destroy($t10)
 15: $t11 := borrow_local($t2)
 16: $t3 := $t11
 17: goto 18
 18: label L2
 19: $t12 := move($t3)
 20: $t13 := TestLiveVars::test1($t12)
 21: return $t13
}


[variant baseline]
fun TestLiveVars::test3($t0|n: u64, $t1|r_ref: &TestLiveVars::R): u64 {
     var $t2|r1: TestLiveVars::R
     var $t3|r2: TestLiveVars::R
     var $t4: u64
     var $t5: TestLiveVars::R
     var $t6: u64
     var $t7: TestLiveVars::R
     var $t8: u64
     var $t9: u64
     var $t10: bool
     var $t11: &TestLiveVars::R
     var $t12: u64
     var $t13: u64
     var $t14: u64
     var $t15: u64
     var $t16: bool
     var $t17: &TestLiveVars::R
     var $t18: &TestLiveVars::R
     var $t19: u64
     var $t20: u64
     var $t21: u64
     var $t22: &TestLiveVars::R
     var $t23: u64
  0: $t4 := 3
  1: $t5 := pack TestLiveVars::R($t4)
  2: $t2 := $t5
  3: $t6 := 4
  4: $t7 := pack TestLiveVars::R($t6)
  5: $t3 := $t7
  6: goto 7
  7: label L7
  8: $t8 := 0
  9: $t9 := copy($t0)
 10: $t10 := <($t8, $t9)
 11: if ($t10) goto 14 else goto 12
 12: label L1
 13: goto 39
 14: label L0
 15: $t11 := move($t1)
 16: destroy($t11)
 17: $t12 := copy($t0)
 18: $t13 := 2
 19: $t14 := /($t12, $t13)
 20: $t15 := 0
 21: $t16 := ==($t14, $t15)
 22: if ($t16) goto 25 else goto 23
 23: label L4
 24: goto 29
 25: label L3
 26: $t17 := borrow_local($t2)
 27: $t1 := $t17
 28: goto 33
 29: label L5
 30: $t18 := borrow_local($t3)
 31: $t1 := $t18
 32: goto 33
 33: label L6
 34: $t19 := copy($t0)
 35: $t20 := 1
 36: $t21 := -($t19, $t20)
 37: $t0 := $t21
 38: goto 7
 39: label L2
 40: $t22 := move($t1)
 41: $t23 := TestLiveVars::test1($t22)
 42: return $t23
}

============ after pipeline `livevar` ================

[variant baseline]
fun TestLiveVars::test1($t0|r_ref: TestLiveVars::R): u64 {
     var $t1|x_ref: u64
     var $t2: u64
     # live vars: r_ref
  0: $t2 := get_field<TestLiveVars::R>.x($t0)
     # live vars: $t2
  1: return $t2
}


[variant baseline]
fun TestLiveVars::test2($t0|b: bool): u64 {
     var $t1|r1: TestLiveVars::R
     var $t2|r2: TestLiveVars::R
     var $t3|r_ref: TestLiveVars::R
     var $t4: u64
     var $t5: TestLiveVars::R
     var $t6: u64
     var $t7: TestLiveVars::R
     var $t8: u64
     # live vars: b
  0: $t4 := 3
     # live vars: b, $t4
  1: $t5 := pack TestLiveVars::R($t4)
     # live vars: b, $t5
  2: $t6 := 4
     # live vars: b, $t5, $t6
  3: $t7 := pack TestLiveVars::R($t6)
     # live vars: b, $t5, $t7
  4: $t3 := $t5
     # live vars: b, r_ref, $t5, $t7
  5: if ($t0) goto 8 else goto 6
     # live vars: r_ref
  6: label L1
     # live vars: r_ref
  7: goto 11
     # live vars: $t5, $t7
  8: label L0
     # live vars: $t5, $t7
  9: destroy($t5)
     # live vars: $t7
 10: $t3 := $t7
     # live vars: r_ref
 11: label L2
     # live vars: r_ref
 12: $t8 := TestLiveVars::test1($t3)
     # live vars: $t8
 13: return $t8
}


[variant baseline]
fun TestLiveVars::test3($t0|n: u64, $t1|r_ref: TestLiveVars::R): u64 {
     var $t2|r1: TestLiveVars::R
     var $t3|r2: TestLiveVars::R
     var $t4: u64
     var $t5: TestLiveVars::R
     var $t6: u64
     var $t7: TestLiveVars::R
     var $t8: u64
     var $t9: bool
     var $t10: u64
     var $t11: u64
     var $t12: u64
     var $t13: bool
     var $t14: u64
     var $t15: u64
     # live vars: n, r_ref
  0: $t4 := 3
     # live vars: n, r_ref, $t4
  1: $t5 := pack TestLiveVars::R($t4)
     # live vars: n, r_ref, $t5
  2: $t6 := 4
     # live vars: n, r_ref, $t5, $t6
  3: $t7 := pack TestLiveVars::R($t6)
     # live vars: n, r_ref, $t5, $t7
  4: label L7
     # live vars: n, r_ref, $t5, $t7
  5: $t8 := 0
     # live vars: n, r_ref, $t5, $t7, $t8
  6: $t9 := <($t8, $t0)
     # live vars: n, r_ref, $t5, $t7, $t9
  7: if ($t9) goto 10 else goto 8
     # live vars: r_ref
  8: label L1
     # live vars: r_ref
  9: goto 28
     # live vars: n, r_ref, $t5, $t7
 10: label L0
     # live vars: n, r_ref, $t5, $t7
 11: destroy($t1)
     # live vars: n, $t5, $t7
 12: $t10 := 2
     # live vars: n, $t5, $t7, $t10
 13: $t11 := /($t0, $t10)
     # live vars: n, $t5, $t7, $t11
 14: $t12 := 0
     # live vars: n, $t5, $t7, $t11, $t12
 15: $t13 := ==($t11, $t12)
     # live vars: n, $t5, $t7, $t13
 16: if ($t13) goto 19 else goto 17
     # live vars: n, $t5, $t7
 17: label L4
     # live vars: n, $t5, $t7
 18: goto 22
     # live vars: n, $t5, $t7
 19: label L3
     # live vars: n, $t5, $t7
 20: $t1 := $t5
     # live vars: n, r_ref, $t5, $t7
 21: goto 24
     # live vars: n, $t5, $t7
 22: label L5
     # live vars: n, $t5, $t7
 23: $t1 := $t7
     # live vars: n, r_ref, $t5, $t7
 24: label L6
     # live vars: n, r_ref, $t5, $t7
 25: $t14 := 1
     # live vars: n, r_ref, $t5, $t7, $t14
 26: $t0 := -($t0, $t14)
     # live vars: n, r_ref, $t5, $t7
 27: goto 4
     # live vars: r_ref
 28: label L2
     # live vars: r_ref
 29: $t15 := TestLiveVars::test1($t1)
     # live vars: $t15
 30: return $t15
}
