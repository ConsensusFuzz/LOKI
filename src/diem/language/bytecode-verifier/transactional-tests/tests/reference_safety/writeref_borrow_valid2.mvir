//# publish
module 0x1.M {
    struct S { f: u64, g: u64, h: u64 }

    t1(root: &mut Self.S, cond: bool) {
        let x: &mut u64;

        if (move(cond)) {
            x = &mut copy(root).S::f;
        } else {
            x = &mut copy(root).S::g;
        }

        // can write even though f and g are borrowed
        *(&mut copy(root).S::h) = 0;

        return;
    }

    t2(root: &mut Self.S, cond: bool) {
        let x: &mut u64;

        if (move(cond)) {
            x = &mut copy(root).S::f;
        } else {
            x = &mut copy(root).S::g;
        }

        // can borrow even though f and g are borrowed
        _ = &mut copy(root).S::f;
        _ = &mut copy(root).S::g;

        return;
    }
}
