//# publish
module 0x1.M1 {
    struct NoAbilities { a: bool }
    struct HasAbilities<phantom T1, T2> has drop, copy, store, key { a: bool }
}

//# publish
module 0x1.M2 {
    import 0x1.M1;

    struct S1<T: drop + copy + store + key> { a: bool }
    struct S2 {
        a: Self.S1<M1.HasAbilities<M1.NoAbilities, M1.NoAbilities>>,
    }
}

//# publish
module 0x1.M3 {
    import 0x1.M1;

    struct HasDrop<phantom T1, T2> has drop { a: bool }
    struct HasCopy<phantom T1, T2> has copy { a: bool }
    struct HasStore<phantom T1, T2> has store { a: bool }
    struct HasKey<phantom T1, T2> has key { a: bool }

    struct S1<T1: drop, T2: copy, T3: store, T4: key> { a: bool }
    struct S2 {
        a: Self.S1< Self.HasDrop<M1.NoAbilities, M1.NoAbilities>,
                    Self.HasCopy<M1.NoAbilities, M1.NoAbilities>,
                    Self.HasStore<M1.NoAbilities, M1.NoAbilities>,
                    Self.HasKey<M1.NoAbilities, M1.NoAbilities>
                  >
    }
}

//# publish
module 0x1.M4 {
    import 0x1.M1;

    f1<T: drop + copy + store + key>() { return; }
    f2() {
        Self.f1<M1.HasAbilities<M1.NoAbilities, M1.NoAbilities>>();
        return;
    }
}


//# publish
module 0x1.M5 {
    import 0x1.M1;
    import 0x1.M3;

    f1<T1: drop, T2: copy, T3: store, T4: key>() { return; }
    f2() {
        Self.f1< M3.HasDrop<M1.NoAbilities, M1.NoAbilities>,
                 M3.HasCopy<M1.NoAbilities, M1.NoAbilities>,
                 M3.HasStore<M1.NoAbilities, M1.NoAbilities>,
                 M3.HasKey<M1.NoAbilities, M1.NoAbilities>
               >();
        return;
    }
}
